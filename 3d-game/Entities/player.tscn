[gd_scene load_steps=6 format=3 uid="uid://1mk4dquwg3vl"]

[sub_resource type="GDScript" id="GDScript_egy34"]
resource_name = "basic_movement"
script/source = "extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 15
@onready var pivot: SpringArm3D = $camera
@export var sens = 0.5


func _enter_tree() -> void:
	$\"..\".set_multiplayer_authority(int(str($\"..\".name)))
	print(\"authority: \", int(str($\"..\".name)))

	if ($\"..\".is_multiplayer_authority()):
		$camera/actual_camera.make_current()


func _ready() -> void:
	if get_window().has_focus():
		print(Input.mouse_mode)
		Input.mouse_mode = Input.MOUSE_MODE_CAPTURED


func _input(event):
	if !$\"..\".is_multiplayer_authority():
		# only let the client that corresponds to this player control it
		return

	if event is InputEventMouseMotion:
		rotate_y(deg_to_rad(-event.relative.x*sens))
		pivot.rotate_x(deg_to_rad(-event.relative.y*sens))
		pivot.rotation.x = clamp(pivot.rotation.x,deg_to_rad(-60),deg_to_rad(30))
	if Input.is_key_pressed(KEY_ESCAPE):
		Input.mouse_mode = Input.MOUSE_MODE_VISIBLE
	


func _physics_process(delta: float) -> void:
	if !$\"..\".is_multiplayer_authority():
		# only let the client that corresponds to this player control it
		return

	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta 

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_dsm1o"]

[sub_resource type="CapsuleMesh" id="CapsuleMesh_sop6y"]

[sub_resource type="SphereMesh" id="SphereMesh_5fhlu"]

[sub_resource type="SceneReplicationConfig" id="SceneReplicationConfig_pdqxr"]
properties/0/path = NodePath("player:position")
properties/0/spawn = true
properties/0/replication_mode = 1
properties/1/path = NodePath("player:rotation")
properties/1/spawn = true
properties/1/replication_mode = 1

[node name="Player" type="Node3D"]

[node name="player" type="CharacterBody3D" parent="."]
script = SubResource("GDScript_egy34")

[node name="body_collision" type="CollisionShape3D" parent="player"]
shape = SubResource("CapsuleShape3D_dsm1o")

[node name="body_mesh" type="MeshInstance3D" parent="player"]
mesh = SubResource("CapsuleMesh_sop6y")

[node name="left_cheek" type="MeshInstance3D" parent="player/body_mesh"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.1, -0.3, 0.1)
visible = false
mesh = SubResource("SphereMesh_5fhlu")
skeleton = NodePath("")

[node name="right_cheek" type="MeshInstance3D" parent="player/body_mesh"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.1, -0.3, 0.1)
visible = false
mesh = SubResource("SphereMesh_5fhlu")
skeleton = NodePath("")

[node name="camera" type="SpringArm3D" parent="player"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.63765, 0)
spring_length = 5.0

[node name="actual_camera" type="Camera3D" parent="player/camera"]

[node name="AudioStreamPlayer3D" type="AudioStreamPlayer3D" parent="player"]

[node name="MultiplayerSynchronizer" type="MultiplayerSynchronizer" parent="."]
replication_config = SubResource("SceneReplicationConfig_pdqxr")
